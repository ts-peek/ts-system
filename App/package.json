/**
 * Since Windows only supports paths with a maximum of 260 characters, the npm dependency chain may break this constraint, 
 * which in turn prevents tools such as Visual Studio from committing any changes. A possible work around requires to
 * analyze the package dependencies and find all deep dependency nestings. These nestings are the primary reason for the
 * too long paths in Windows. However, when listing a package from in between the deep dependency list as direct root 
 * dependency, npm will take the root package, which shortens the deep path significantly.
 */
{
	"name": "TSSystem",
	"version": "0.1.0",
	"description": "This TypeScript library contains functionality common for most systems, (e.g. exception types, design by contract classes, utility classes for strings/numbers/objects, etc.).",
	"keywords": [
		"TypeScript",
		"utility",
		"library"
	],
	"author": "Christian Schaiter <christian.schaiter@outlook.com>",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://christian_schaiter@bitbucket.org/lilacloud/tssystem.git"
	},
	"devDependencies": {
		"anymatch": "^1.2.1", // required to short paths for Windows (found as dependency for "karma")
		"file-reader": "^1.0.0", // required to short paths for Windows (found as dependency for "anymatch")
		"grunt": "^0.4.5",
		"grunt-contrib-copy": "^0.8.0",
		"grunt-contrib-uglify": "^0.8.0",
		"grunt-contrib-watch": "^0.6.1",
		"grunt-ts": "^3.0.0",
		"grunt-tslint": "^2.0.0",
		"jasmine-core": "^2.2.0",
		"karma": "^0.12.31",
		"karma-chrome-launcher": "^0.1.7",
		"karma-ie-launcher": "^0.1.5",
		"karma-jasmine": "^0.3.5",
		"karma-phantomjs-launcher": "^0.1.4",
		"karma-typescript-preprocessor": "0.0.16",
		"lodash.bind": "^3.1.0",
		"lodash.createcallback": "^2.4.1",
		"tslint": "^2.1.1",
		"typescript": "^1.3.0"
	}
}
